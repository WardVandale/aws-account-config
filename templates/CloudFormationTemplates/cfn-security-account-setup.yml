---
AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Configure {{ security_account.name }} account. This template should only
  be deployed on the security account.
    - Log bucket for security related files
    - Bucket policy to allow all accounts to access the bucket

Resources:
  {{ cfn_org_name }}SecurityLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: "{{ organization.name }}-prd-security-log-bucket"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - NoncurrentVersionExpirationInDays: 60
          Status: Enabled
      Tags:
      - Key: Application
        Value: "{{ organization.name }}security"
      - Key: Environment
        Value: "prd"
      - Key: Customer
        Value: "shared"

  {{ cfn_org_name }}GuardDutyListsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: "{{ organization.name }}-prd-guardduty-lists-bucket"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 60
            Status: Enabled
      Tags:
        - Key: Application
          Value: "{{ organization.name }}security"
        - Key: Environment
          Value: "prd"
        - Key: Customer
          Value: "shared"
        - Key: Description
          Value: "Hold whitelist and blacklist files to be used by GuardDuty"

  {{ cfn_org_name }}SecurityCrossAccountAccessToS3LogBucket:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - {{ cfn_org_name }}SecurityLogBucket
    Properties:
      Bucket: !Ref {{ cfn_org_name }}SecurityLogBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAcl
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource: arn:aws:s3:::{{ organization.name }}-prd-security-log-bucket
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource:
            - arn:aws:s3:::{{ organization.name }}-prd-security-log-bucket/AWSLogs/{{ bastion_account.account_id }}/*
{% for account in subaccounts %}
            - arn:aws:s3:::{{ organization.name }}-prd-security-log-bucket/AWSLogs/{{ account.account_id }}/*
{% endfor %}
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control

        - Sid: AWSConfigAcl
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
          Action: s3:GetBucketAcl
          Resource: arn:aws:s3:::{{ organization.name }}-prd-security-log-bucket
        - Sid: AWSConfigWrite
          Effect: Allow
          Principal:
            Service: config.amazonaws.com
          Action: s3:PutObject
          Resource:
            - arn:aws:s3:::{{ organization.name }}-prd-security-log-bucket/AWSLogs/{{ bastion_account.account_id }}/*
{% for account in subaccounts %}
            - arn:aws:s3:::{{ organization.name }}-prd-security-log-bucket/AWSLogs/{{ account.account_id }}/*
{% endfor %}
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control

  {{ cfn_org_name }}SecurityConfigAggregator:
    Type: AWS::Config::ConfigurationAggregator
    Properties:
      AccountAggregationSources:
        - AccountIds:
{% for account in subaccounts %}
            - "{{ account.account_id }}"
{% endfor %}
          AwsRegions:
            {{ aws_local_regions }}
      ConfigurationAggregatorName: "{{ cfn_org_name }}ConfigAggregator"
